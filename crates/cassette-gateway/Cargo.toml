[package]
name = "cassette-gateway"

authors = { workspace = true }
description = "Cloud-native Cassette Web API Gateway"
documentation = "https://docs.rs/cassette-gateway"
edition = { workspace = true }
include = { workspace = true }
keywords = { workspace = true }
license = { workspace = true }
readme = { workspace = true }
rust-version = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
version = { workspace = true }

[lints]
workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["default-tls", "full", "openark"]
full = ["helm", "kubernetes"]
experimental = []
openark = ["vine"]
unsafe-mock = ["cassette-plugin-kubernetes-api?/unsafe-mock"]

# TLS
default-tls = ["rustls-tls"]
openssl-tls = [
    "actix-web/openssl",
    "cassette-plugin-cdl-api?/openssl-tls",
    "kube/openssl-tls",
    "reqwest?/native-tls",
]
rustls-tls = [
    "actix-web/rustls",
    "cassette-plugin-cdl-api?/rustls-tls",
    "kube/rustls-tls",
    "reqwest?/rustls-tls",
]

# OpenARK

vine = [
    "cassette-plugin-cdl-api?/vine",
    "cassette-plugin-helm-api?/vine",
    "cassette-plugin-kubernetes-api?/vine",
]

# Plugins

## Connected Data Lake (CDL)
cdl = ["cassette-core/cdl", "dep:cassette-plugin-cdl-api"]

## Helm
helm = ["dep:cassette-plugin-helm-api", "dep:reqwest"]

## Kubernetes
kubernetes = ["dep:cassette-plugin-kubernetes-api"]

[dependencies]
cassette-core = { path = "../cassette-core", features = ["api"] }
cassette-loader-core = { path = "../cassette-loader-core" }
cassette-plugin-cdl-api = { path = "../cassette-plugin-cdl-api", optional = true }
cassette-plugin-helm-api = { path = "../cassette-plugin-helm-api", optional = true }
cassette-plugin-kubernetes-api = { path = "../cassette-plugin-kubernetes-api", optional = true }

actix-cors = { workspace = true }
actix-web = { workspace = true }
actix-web-opentelemetry = { workspace = true }
anyhow = { workspace = true }
ark-core = { workspace = true, features = ["signal"] }
clap = { workspace = true }
futures = { workspace = true }
kube = { workspace = true, features = ["client", "runtime", "ws"] }
mime = { workspace = true }
reqwest = { workspace = true, optional = true }
serde = { workspace = true }
tokio = { workspace = true, features = ["full"] }
tracing = { workspace = true }
uuid = { workspace = true, features = ["serde"] }
