[package]
name = "cassette"

authors = { workspace = true }
description = { workspace = true }
documentation = { workspace = true }
edition = { workspace = true }
include = { workspace = true }
keywords = { workspace = true }
license = { workspace = true }
readme = { workspace = true }
rust-version = { workspace = true }
homepage = { workspace = true }
repository = { workspace = true }
version = { workspace = true }

[lints]
workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["full-local"]
full = ["full-gateway", "full-local"]
full-gateway = ["helm", "kubernetes"]
full-local = ["openai", "webcam"]
experimental = []

# for demo ONLY
examples = ["cassette-core/examples", "dep:cassette-loader-file"]
mock-release = ["cassette-core/mock-release"]

# Plugins

## Helm
helm = ["dep:cassette-plugin-helm-core"]

## Kubernetes
kubernetes = ["dep:cassette-plugin-kubernetes-core", "kubernetes-list"]
kubernetes-list = ["dep:cassette-plugin-kubernetes-list"]

## OpenAI
openai = ["openai-chat"]
openai-chat = ["dep:cassette-plugin-openai-chat"]

## Webcam
webcam = ["webcam-audio"]
webcam-audio = ["dep:cassette-plugin-webcam-audio"]

[build-dependencies]
built = { workspace = true }

[dependencies]
cassette-core = { path = "../cassette-core", features = ["ui"] }
cassette-loader-file = { path = "../cassette-loader-file", optional = true }
cassette-plugin-helm-core = { path = "../cassette-plugin-helm-core", optional = true }
cassette-plugin-kubernetes-core = { path = "../cassette-plugin-kubernetes-core", optional = true }
cassette-plugin-kubernetes-list = { path = "../cassette-plugin-kubernetes-list", optional = true }
cassette-plugin-openai-chat = { path = "../cassette-plugin-openai-chat", optional = true }
cassette-plugin-webcam-audio = { path = "../cassette-plugin-webcam-audio", optional = true }

browser-panic-hook = { workspace = true }
byte-unit = { workspace = true }
chrono = { workspace = true }
futures = { workspace = true }
gloo-storage = { workspace = true }
gloo-utils = { workspace = true }
inflector = { workspace = true }
itertools = { workspace = true }
patternfly-yew = { workspace = true }
regex = { workspace = true }
schemars = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
tracing-subscriber-wasm = { workspace = true }
uuid = { workspace = true }
wasm-streams = { workspace = true }
web-sys = { workspace = true }
yew = { workspace = true }
yew-markdown = { workspace = true }
yew-hooks = { workspace = true }
yew-nested-router = { workspace = true }
